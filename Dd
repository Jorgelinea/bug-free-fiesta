local UILibrary = {}

function UILibrary:CreateUI(titleText, descriptionText)
    -- Crear tabla para almacenar información del GUI
    local uiData = {
        Tabs = {},
        ScreenGui = nil,
        TitleLabel = nil,
        DescriptionLabel = nil,
        Minimized = false,
        ActiveTabButton = nil
    }

    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    -- Crear ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "CustomUILibrary"
    screenGui.Parent = playerGui
    uiData.ScreenGui = screenGui

    -- Crear Frame para el Título General
    local titleFrame = Instance.new("Frame")
    titleFrame.Name = "TitleFrame"
    titleFrame.Size = UDim2.new(1, 0, 0, 50)  -- Un poco más alto para el título
    titleFrame.Position = UDim2.new(0, 0, 0, 0)
    titleFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    titleFrame.BorderSizePixel = 0
    titleFrame.Parent = screenGui

    -- Título
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Size = UDim2.new(1, -80, 0.5, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = titleText or "Default Title"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.TextSize = 20
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleFrame
    uiData.TitleLabel = titleLabel

    -- Descripción
    local descriptionLabel = Instance.new("TextLabel")
    descriptionLabel.Name = "DescriptionLabel"
    descriptionLabel.Size = UDim2.new(1, -80, 0.5, 0)
    descriptionLabel.Position = UDim2.new(0, 10, 0.5, 0)
    descriptionLabel.BackgroundTransparency = 1
    descriptionLabel.Text = descriptionText or "Default Description"
    descriptionLabel.TextColor3 = Color3.fromRGB(150, 150, 150) -- Gris
    descriptionLabel.Font = Enum.Font.SourceSans
    descriptionLabel.TextSize = 16
    descriptionLabel.TextXAlignment = Enum.TextXAlignment.Left
    descriptionLabel.TextYAlignment = Enum.TextYAlignment.Top
    descriptionLabel.Parent = titleFrame
    uiData.DescriptionLabel = descriptionLabel

    -- Botón "X" para cerrar todo el GUI
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 30, 1, 0)
    closeButton.Position = UDim2.new(1, -30, 0, 0)
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.TextSize = 18
    closeButton.Parent = titleFrame

    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)

    -- Botón de Minimizador
    local minimizeButton = Instance.new("TextButton")
    minimizeButton.Name = "MinimizeButton"
    minimizeButton.Size = UDim2.new(0, 30, 1, 0)
    minimizeButton.Position = UDim2.new(1, -60, 0, 0)
    minimizeButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    minimizeButton.Text = "_"
    minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    minimizeButton.Font = Enum.Font.SourceSansBold
    minimizeButton.TextSize = 18
    minimizeButton.Parent = titleFrame

    -- Crear Frame para los Tabs
    local tabsFrame = Instance.new("Frame")
    tabsFrame.Name = "TabsFrame"
    tabsFrame.Size = UDim2.new(1, 0, 0, 50)  -- Un poco más separado
    tabsFrame.Position = UDim2.new(0, 0, 0, 50)  -- Ajusta la posición para separarlo del titleFrame
    tabsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    tabsFrame.BorderSizePixel = 0
    tabsFrame.Parent = screenGui

    -- Scroll para los Tabs
    local tabsScroll = Instance.new("ScrollingFrame")
    tabsScroll.Name = "TabsScroll"
    tabsScroll.Size = UDim2.new(1, 0, 1, 0)
    tabsScroll.CanvasSize = UDim2.new(2, 0, 0, 0)
    tabsScroll.ScrollBarThickness = 5
    tabsScroll.BackgroundTransparency = 1
    tabsScroll.Parent = tabsFrame

    -- Layout para los Tabs
    local tabsLayout = Instance.new("UIListLayout")
    tabsLayout.FillDirection = Enum.FillDirection.Horizontal
    tabsLayout.Padding = UDim.new(0, 10)
    tabsLayout.Parent = tabsScroll

    -- Crear Frame para los Contenidos
    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Size = UDim2.new(1, 0, 0.9, -80)
    contentFrame.Position = UDim2.new(0, 0, 0, 100) -- Separado aún más del titleFrame
    contentFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    contentFrame.BorderSizePixel = 0
    contentFrame.Parent = screenGui

    -- Scroll para los botones
    local contentScroll = Instance.new("ScrollingFrame")
    contentScroll.Name = "ContentScroll"
    contentScroll.Size = UDim2.new(1, 0, 1, 0)
    contentScroll.CanvasSize = UDim2.new(0, 0, 2, 0)
    contentScroll.ScrollBarThickness = 5
    contentScroll.BackgroundTransparency = 1
    contentScroll.Parent = contentFrame

    -- Layout para los botones
    local buttonsLayout = Instance.new("UIListLayout")
    buttonsLayout.FillDirection = Enum.FillDirection.Vertical
    buttonsLayout.Padding = UDim.new(0, 10)
    buttonsLayout.Parent = contentScroll

    -- Guardar referencias
    uiData.TabsScroll = tabsScroll
    uiData.ContentScroll = contentScroll
    uiData.ContentFrame = contentFrame  -- Guardar referencia al contentFrame para minimizarlo

    minimizeButton.MouseButton1Click:Connect(function()
        -- Minimizar solo el contenedor de contenido, no el titleFrame
        if uiData.Minimized then
            contentFrame.Visible = true
            uiData.Minimized = false
        else
            contentFrame.Visible = false
            uiData.Minimized = true
        end
    end)

    return uiData
end

function UILibrary:AddTab(uiData, tabName)
    local tabButton = Instance.new("TextButton")
    tabButton.Name = tabName .. "Tab"
    tabButton.Size = UDim2.new(0, 100, 1, 0)
    tabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    tabButton.Text = tabName
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.Font = Enum.Font.SourceSans
    tabButton.TextSize = 16
    tabButton.Parent = uiData.TabsScroll

    local tabContent = Instance.new("Frame")
    tabContent.Name = tabName .. "Content"
    tabContent.Size = UDim2.new(1, 0, 1, 0)
    tabContent.Position = UDim2.new(0, 0, 0, 0)
    tabContent.BackgroundTransparency = 1
    tabContent.Visible = false
    tabContent.Parent = uiData.ContentScroll

    uiData.Tabs[tabName] = tabContent

    tabButton.MouseButton1Click:Connect(function()
        -- Cambiar color del Tab activo
        if uiData.ActiveTabButton then
            uiData.ActiveTabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        end
        tabButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)  -- Color para el Tab activo
        uiData.ActiveTabButton = tabButton
        
        -- Mostrar el contenido del Tab seleccionado
        for _, tab in pairs(uiData.Tabs) do
            tab.Visible = false
        end
        tabContent.Visible = true
    end)
end

function UILibrary:AddButton(uiData, tabName, buttonName, callback)
    local tabContent = uiData.Tabs[tabName]
    if not tabContent then
        warn("El Tab " .. tabName .. " no existe.")
        return
    end

    local button = Instance.new("TextButton")
    button.Name = buttonName .. "Button"
    button.Size = UDim2.new(1, -10, 0, 50)
    button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    button.Text = buttonName
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSans
    button.TextSize = 18
    button.Parent = tabContent

    button.MouseButton1Click:Connect(callback)
end

return UILibrary
